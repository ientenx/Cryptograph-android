//package com.example.cryptography.crypto.template
//
//enum class CryptographyMethod(val algorithm: String) {
//    // AEAD templates
//    AES128_EAX("AES128_EAX"),
//    AES256_EAX("AES256_EAX"),
//    AES128_CTR_HMAC_SHA256("AES128_CTR_HMAC_SHA256"),
//    AES256_CTR_HMAC_SHA256("AES256_CTR_HMAC_SHA256"),
//    AES128_GCM("AES128_GCM"),
//    AES256_GCM("AES256_GCM"),
//    CHACHA20_POLY1305("CHACHA20_POLY1305"),
//    XCHACHA20_POLY1305("XCHACHA20_POLY1305"),
//
//    // Deterministic AEAD templates
//    AES256_SIV("AES256_SIV"),
//
//    // Streaming AEAD templates
//    AES128_CTR_HMAC_SHA256_4KB("AES128_CTR_HMAC_SHA256_4KB"),
//    AES128_CTR_HMAC_SHA256_1MB("AES128_CTR_HMAC_SHA256_1MB"),
//    AES256_CTR_HMAC_SHA256_4KB("AES256_CTR_HMAC_SHA256_4KB"),
//    AES256_CTR_HMAC_SHA256_1MB("AES256_CTR_HMAC_SHA256_1MB"),
//    AES128_GCM_HKDF_4KB("AES128_GCM_HKDF_4KB"),
//    AES128_GCM_HKDF_1MB("AES128_GCM_HKDF_1MB"),
//    AES256_GCM_HKDF_4KB("AES256_GCM_HKDF_4KB"),
//    AES256_GCM_HKDF_1MB("AES256_GCM_HKDF_1MB"),
//
//    // Hybrid templates
//    ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256("ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256"),
//    ECIES_P256_COMPRESSED_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256("ECIES_P256_COMPRESSED_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256"),
//    ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM("ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM"),
//    ECIES_P256_COMPRESSED_HKDF_HMAC_SHA256_AES128_GCM("ECIES_P256_COMPRESSED_HKDF_HMAC_SHA256_AES128_GCM"),
//}